Интегранд: f(x) * sin100x
Есть 2 варианта: решать методом Симпсона с очень маленьким шагом 
или 
найти апроксимирующую f(x) функцию f_cool(x), при которой int[ f_cool(x) * sin100x ]dx решался бы аналитически.

Ввиду сжатых сроков применялся метод Симпсона:

По формуле VII.1.6 из практикума. 
  Создал равномерную сетку (параметризовал x=x(i));
  Про цикл с j: если мы домножим в формуле VII.1.6 индекс на 2, то j пробегает значения от 1 до N, при каждым k учитывая f[2k], 
    которое появляется на k-ой и (k+1)-ой итерации. Поэтому 2*f[2j]. Т.к. цикл до N, то лишнюю f[2N] я вычитаю в res.
  Про result: мы N раз делили (по формуле) на 6, а т.к. сетка равномерная, то summ(h_k) = h = (3-0) = 3

Как вариант, если не устраивает точность, всегда можно комбинировать методы:
Поправка Ричардсона: I_симпсон = I_трапец+(I_трапец-I_трапец_0.5)/3
